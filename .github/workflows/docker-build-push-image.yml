name: Build and Push Docker image

on:
  workflow_call:
    inputs:
      aws_ecr:
        description: "Push to AWS ECR"
        default: true
        required: false
        type: boolean
      docker_hub:
        description: "Push to Docker Hub"
        default: true
        required: false
        type: boolean
    secrets:
      AWS_ACCOUNT_ID:
        description: "The AWS account ID used to determine the ECR registry"
        required: true
        type: string
      AWS_REGION:
        description: "The AWS region used to determine the ECR registry"
        required: true
        type: string
      AWS_ECR_ACCESS_KEY_ID:
        description: "The access key ID used to log into AWS ECR"
        required: true
        type: string
      AWS_ECR_SECRET_ACCESS_KEY:
        description: "The secret access key ID used to log into AWS ECR"
        required: true
        type: string
      DOCKERHUB_USERNAME:
        description: "The username used to log into Docker Hub"
        required: true
        type: string
      DOCKERHUB_PASSWORD:
        description: "The password used to log into Docker Hub"
        required: true
        type: string

permissions:
  contents: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    steps:
      - name: Checkout code
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25

      - name: Cache Docker layers
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        if: ${{inputs.docker_hub}}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to ECR
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        if: ${{inputs.aws_ecr}}
        with:
          registry: ${{ env.ECR_REGISTRY }}
          username: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}

      - name: Build Docker image
        uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229
        with:
          context: .
          file: ./Dockerfile
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Push to Docker Hub
        uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229
        if: ${{inputs.docker_hub}}
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ github.event.repository.full_name }}:latest
            ${{ github.event.repository.full_name }}:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Push to AWS ECR
        uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229
        if: ${{inputs.aws_ecr}}
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ github.event.repository.name }}:production
            ${{ env.ECR_REGISTRY }}/${{ github.event.repository.name }}:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
